[{"E:\\Web\\React Stuff\\chat-app\\src\\index.js":"1","E:\\Web\\React Stuff\\chat-app\\src\\components\\sidebar\\Sidebar.jsx":"2","E:\\Web\\React Stuff\\chat-app\\src\\app\\store.js":"3","E:\\Web\\React Stuff\\chat-app\\src\\components\\sidebarChat\\SidebarChat.jsx":"4","E:\\Web\\React Stuff\\chat-app\\src\\serviceWorker.js":"5","E:\\Web\\React Stuff\\chat-app\\src\\components\\chat\\Chat.jsx":"6","E:\\Web\\React Stuff\\chat-app\\src\\App.js":"7","E:\\Web\\React Stuff\\chat-app\\src\\features\\userSlice.js":"8","E:\\Web\\React Stuff\\chat-app\\src\\components\\login\\Login.jsx":"9","E:\\Web\\React Stuff\\chat-app\\src\\firebase\\firebase.js":"10","E:\\Web\\React Stuff\\chat-app\\src\\features\\chatSlice.js":"11","E:\\Web\\React Stuff\\chat-app\\src\\components\\message\\Message.jsx":"12","E:\\Web\\React Stuff\\chat-app\\src\\components\\privateChats\\PrivateChats.jsx":"13","E:\\Web\\React Stuff\\chat-app\\src\\pages\\messenger\\Messenger.jsx":"14","E:\\Web\\React Stuff\\chat-app\\src\\features\\darkModeSlice.js":"15","E:\\Web\\React Stuff\\chat-app\\src\\components\\darkThemeToggle\\DarkThemeToggle.jsx":"16"},{"size":644,"mtime":1608808995129,"results":"17","hashOfConfig":"18"},{"size":5189,"mtime":1609421994671,"results":"19","hashOfConfig":"18"},{"size":350,"mtime":1609773981913,"results":"20","hashOfConfig":"18"},{"size":1510,"mtime":1609422151466,"results":"21","hashOfConfig":"18"},{"size":5141,"mtime":1608808995129,"results":"22","hashOfConfig":"18"},{"size":3568,"mtime":1610031527088,"results":"23","hashOfConfig":"18"},{"size":1685,"mtime":1610031303068,"results":"24","hashOfConfig":"18"},{"size":455,"mtime":1609773374350,"results":"25","hashOfConfig":"18"},{"size":460,"mtime":1608924171179,"results":"26","hashOfConfig":"18"},{"size":670,"mtime":1609354408983,"results":"27","hashOfConfig":"18"},{"size":710,"mtime":1609344452383,"results":"28","hashOfConfig":"18"},{"size":993,"mtime":1609344452375,"results":"29","hashOfConfig":"18"},{"size":2314,"mtime":1609422152608,"results":"30","hashOfConfig":"18"},{"size":530,"mtime":1609421996241,"results":"31","hashOfConfig":"18"},{"size":446,"mtime":1609848295888,"results":"32","hashOfConfig":"18"},{"size":983,"mtime":1610035913149,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1oywamm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Web\\React Stuff\\chat-app\\src\\index.js",[],["71","72"],"E:\\Web\\React Stuff\\chat-app\\src\\components\\sidebar\\Sidebar.jsx",[],"E:\\Web\\React Stuff\\chat-app\\src\\app\\store.js",[],"E:\\Web\\React Stuff\\chat-app\\src\\components\\sidebarChat\\SidebarChat.jsx",[],["73","74"],"E:\\Web\\React Stuff\\chat-app\\src\\serviceWorker.js",[],["75","76"],"E:\\Web\\React Stuff\\chat-app\\src\\components\\chat\\Chat.jsx",["77"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkIfPrivate, selectChatId, selectChatName } from '../../features/chatSlice';\r\nimport { db } from '../../firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport Message from '../message/Message';\r\nimport './Chat.scss';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport { selectDarkMode , } from '../../features/darkModeSlice';\r\nimport DarkThemeToggle from '../darkThemeToggle/DarkThemeToggle';\r\n\r\n\r\nfunction Chat() {\r\n    const chatName = useSelector(selectChatName);\r\n    const chatId = useSelector(selectChatId);\r\n    const isPrivate = useSelector(checkIfPrivate);\r\n    const user = useSelector(selectUser);\r\n    const isDark = useSelector(selectDarkMode);\r\n    const [input,setInput] = useState('')\r\n    const [messages,setMessages] = useState([]);\r\n    const privateChat = 'Private Chat';\r\n    const groupChat = 'Group Chat';\r\n\r\n    const throwMessages = (collection) => {\r\n        /* this function pushes the message data on firebase collection: messages */\r\n\r\n        db.collection(collection).doc(chatId).collection('messages').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            userImage: user.userImage,\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        const receiveMessages = (collection) => {\r\n            /* this function receives data from collection: messages */\r\n            \r\n            db.collection(collection)\r\n            .doc(chatId)\r\n            .collection('messages')\r\n            .orderBy('timestamp' , 'asc')\r\n            .onSnapshot((snapshot) => {\r\n                setMessages(snapshot.docs.map((message) => ({\r\n                    id:message.id,\r\n                    data: message.data()\r\n                })\r\n                ))\r\n            })\r\n        }\r\n\r\n        if(chatId)\r\n        {\r\n            if(isPrivate){\r\n                receiveMessages('private_chats')\r\n            }\r\n            else{\r\n                receiveMessages('chats');\r\n            }\r\n        }\r\n    }, [chatId,isPrivate])\r\n\r\n    function submition(e){\r\n\r\n        e.preventDefault();\r\n        if(input)\r\n        {\r\n            if(isPrivate){\r\n                throwMessages('private_chats');\r\n            }\r\n            else{\r\n                throwMessages('chats');\r\n            }\r\n        }\r\n      \r\n        setInput('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className=\"chat-header\">\r\n                <div className=\"chat-header-headings\">\r\n                <h1>To:<span className='chat-header-contact'> {chatName} </span></h1>\r\n                <h2>{(isPrivate?privateChat:groupChat)}</h2>\r\n                </div>\r\n                <DarkThemeToggle/>\r\n            </div>\r\n            <div className={`chat-messages ${isDark? 'chat-messages-dark': ''}`}>\r\n                {messages.map((message, idx) => (\r\n                    <Message key = {message.id} data = {message.data} isLast={(idx === messages?.length - 1)}/>\r\n                ))}\r\n            </div>\r\n\r\n             \r\n                <form onSubmit={submition} className=\"chat-input\" >\r\n                    <input value={input} onChange={e => setInput(e.target.value) } type='text' placeholder='Message here'/>\r\n                    <button type='submit'/>\r\n                </form>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","E:\\Web\\React Stuff\\chat-app\\src\\App.js",[],"E:\\Web\\React Stuff\\chat-app\\src\\features\\userSlice.js",[],"E:\\Web\\React Stuff\\chat-app\\src\\components\\login\\Login.jsx",[],"E:\\Web\\React Stuff\\chat-app\\src\\firebase\\firebase.js",[],"E:\\Web\\React Stuff\\chat-app\\src\\features\\chatSlice.js",[],["78","79"],"E:\\Web\\React Stuff\\chat-app\\src\\components\\message\\Message.jsx",[],"E:\\Web\\React Stuff\\chat-app\\src\\components\\privateChats\\PrivateChats.jsx",[],"E:\\Web\\React Stuff\\chat-app\\src\\pages\\messenger\\Messenger.jsx",[],"E:\\Web\\React Stuff\\chat-app\\src\\features\\darkModeSlice.js",[],"E:\\Web\\React Stuff\\chat-app\\src\\components\\darkThemeToggle\\DarkThemeToggle.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"82","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],["94"],["95"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar",["94"],["95"],"no-global-assign","no-unsafe-negation"]